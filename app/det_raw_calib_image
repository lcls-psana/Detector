#!/usr/bin/env python
import logging
logger = logging.getLogger(__name__)
logging.basicConfig(format='[%(levelname).1s] L%(lineno)04d: %(message)s', level=logging.INFO)

import sys
from psana import DataSource, Detector
from Detector.GlobalUtils import info_ndarr

SCRNAME = sys.argv[0].rsplit('/')[-1]
usage = '  %s <dataset-name> <detector-name> <number-of-events> <number-events-to-skip>'%SCRNAME\
      + '\nexample: %s exp=detdaq18:run=272 DetLab.0:Epix10ka.0 10'%SCRNAME
logging.info('%s\nusage: %s' % (50*'=', usage))

nargs = len(sys.argv)
dsname  = sys.argv[1]      if nargs>1 else 'exp=detdaq18:run=272'
detname = sys.argv[2]      if nargs>2 else 'DetLab.0:Epix10ka.0'
EVENTS  = int(sys.argv[3]) if nargs>3 else 3
EVSKIP  = int(sys.argv[4]) if nargs>4 else 0

if True:
    ds = DataSource('exp=detdaq18:run=272')
    det = Detector('DetLab.0:Epix10ka.0')
    logging.info('det.shape:' + str(det.shape()))
    
    #import _psana
    #cfg = ds.env().configStore()
    #c = cfg.get(_psana.Epix.Config10kaV1, det.source)
    #print 'numberOfRows, numberOfColumns', c.numberOfRows(), c.numberOfColumns()
    i = 0
    for i, evt in enumerate(ds.events()):

        logging.info('%s\nEvent %4d' % (50*'_', i))

        if i<EVSKIP: continue
        if i>EVENTS: break

        raw = det.raw(evt)
        logging.info(info_ndarr(raw, 'raw'))

        if raw is None:
            logging.warning('raw is None')
            continue

        calib = det.calib(evt)
        logging.info(info_ndarr(calib, 'calib'))

        img = det.image(evt)
        logging.info(info_ndarr(img, 'img'))

    sys.exit('END OF %s' % SCRNAME)
