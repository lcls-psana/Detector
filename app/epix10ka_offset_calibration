#!/usr/bin/env python
#------------------------------
from __future__ import print_function
import os
import sys
from time import time

from Detector.GlobalUtils import info_command_line_parameters
from Detector.UtilsEpix10kaCalib import offset_calibration, CALIB_REPO_EPIX10KA

import logging
logger = logging.getLogger(__name__)
DICT_NAME_TO_LEVEL = {k:v for k,v in logging._levelNames.items() if isinstance(k, str)}
STR_LEVEL_NAMES = ', '.join(DICT_NAME_TO_LEVEL.keys())

#------------------------------

def epix10ka_offset_calibration():

    t0_sec = time()

    parser = option_parser()
    (popts, pargs) = parser.parse_args()
    args = pargs
    opts = vars(popts)
    defs = vars(parser.get_default_values())

    if popts.exp is None : raise IOError('WARNING: option "-e <experiment>" MUST be specified.') # sys.exit()
    if popts.det is None : raise IOError('WARNING: option "-d <detector-name>" MUST be specified.')
    if popts.run is None : raise IOError('WARNING: option "-r <run-number>" MUST be specified.')

    logging.basicConfig(format='%(levelname)s: %(message)s', level=DICT_NAME_TO_LEVEL[popts.logmode])

    logger.debug('%s\nIn epix10ka_offset_calibration' % (50*'_'))
    logger.debug(info_command_line_parameters(parser))

    offset_calibration(*args, **opts)

    logger.info('DONE, consumed time %.3f sec' % (time() - t0_sec))

#------------------------------

def usage(mode=0) :
    proc_name = os.path.basename(sys.argv[0])
    if   mode == 1 : return 'Proceses offset run xtc data for epix10ka.'
    elif mode == 2 : return 'Try: %s -h' % proc_name
    else : return\
           '\n%prog -e <experiment> [-d <detector>] [-r <run-number>]'\
           '\n       [-i <panel-index>] [-n <nspace>] [-x <xtc-directory>] [-o <output-result-directory>] [-L <logging-mode>] [-p]'\
           '\nTEST COMMAND:'\
           '\n  %prog -e mfxx32516 -d NoDetector.0:Epix10ka.3 -r 1021 -n 2 -x /reg/d/psdm/mfx/mfxx32516/scratch/gabriel/pulser/xtc/combined -o ./myrepo'\
           '\nREGULAR COMMAND:'\
           '\n  %prog -e mfxx32516 -d NoDetector.0:Epix10ka.3 -r 1021 -L INFO'\
           '\n  %prog -e detdaq17 -d DetLab.0:Epix10ka2M.0 -r 129 -i 11'\
           '\n  bsub -o log00 -q psanaq %prog -e xcsx35617 -d XcsEndstation.0:Epix10ka2M.0 -r544 --idx=0 --nspace=5 -o /reg/neh/home/dubrovin/LCLS/con-detector/work -p'\
           '\n  bsub -o log01 -q psanaq %prog -e xcsx35617 -d XcsEndstation.0:Epix10ka2M.0 -r544 --idx=1 --nspace=5 -o /reg/neh/home/dubrovin/LCLS/con-detector/work -p'\
           '\n  %prog -e xcsx35617 -d XcsEndstation.0:Epix10ka2M.0 -r544 --idx=1 --nspace=5 -o ./work      -P -S'\
           '\n  %prog -e xcsx35617 -d XcsEndstation.0:Epix10ka2M.0 -r544 --idx=0 --nspace=5 -o ./work'

#------------------------------

def option_parser() :
    from optparse import OptionParser

    d_exp     = None # 'mfxx32516'
    d_det     = None # 'NoDetector.0:Epix10ka.3'
    d_run     = None # 1021
    d_idx     = None # 0-15 for epix10ka2m, 0-3 for epix10kaquad
    d_nbs     = 4600 # number of frames
    d_nspace  = 7    # 2
    d_dirxtc  = None # '/reg/d/psdm/mfx/mfxx32516/scratch/gabriel/pulser/xtc/combined'
    d_dirrepo = CALIB_REPO_EPIX10KA # './myrepo' 
    d_display = True
    d_logmode = 'DEBUG'
    d_dopeds  = True
    d_dooffs  = True
    d_usesmd  = True

    h_exp     = 'experiment name, default = %s' % d_exp
    h_det     = 'detector name, default = %s' % d_det
    h_run     = 'run number, default = %s' % str(d_run)
    h_idx     = 'panel index (0-15/3 for epix10ka2m/quad), default = %s' % str(d_idx)
    h_nbs     = 'number of frames to calibrate offsets, default = %s' % str(d_nbs)
    h_nspace  = 'space between calibrated pixels, default = %s' % str(d_nspace)
    h_dirxtc  = 'non-default xtc directory, default = %s' % d_dirxtc
    h_dirrepo = 'repository for calibration results, default = %s' % d_dirrepo
    h_display = 'turn off graphical display, default = %s' % d_display
    h_logmode = 'logging mode, one of %s, default = %s' % (STR_LEVEL_NAMES, d_logmode)
    h_dopeds  = 'do pedestals evaluation, default = %s' % d_dopeds
    h_dooffs  = 'do offset evaluation, default = %s' % d_dooffs
    h_usesmd  = 'add "smd" in dataset string, default = %s' % d_usesmd

    parser = OptionParser(description=usage(1), usage = usage())
    parser.add_option('-e', '--exp',     default=d_exp,     action='store', type='string', help=h_exp)
    parser.add_option('-d', '--det',     default=d_det,     action='store', type='string', help=h_det)
    parser.add_option('-r', '--run',     default=d_run,     action='store', type='int',    help=h_run)
    parser.add_option('-i', '--idx',     default=d_idx,     action='store', type='int',    help=h_idx)
    parser.add_option('-b', '--nbs',     default=d_nbs,     action='store', type='int',    help=h_nbs)
    parser.add_option('-n', '--nspace',  default=d_nspace,  action='store', type='int',    help=h_nspace)
    parser.add_option('-x', '--dirxtc',  default=d_dirxtc,  action='store', type='string', help=h_dirxtc)
    parser.add_option('-o', '--dirrepo', default=d_dirrepo, action='store', type='string', help=h_dirrepo)
    parser.add_option('-p', '--display', default=d_display, action='store_false',          help=h_display)
    parser.add_option('-L', '--logmode', default=d_logmode, action='store', type='string', help=h_logmode)
    parser.add_option('-P', '--dopeds',  default=d_dopeds,  action='store_false',          help=h_dopeds)
    parser.add_option('-O', '--dooffs',  default=d_dooffs,  action='store_false',          help=h_dooffs)
    parser.add_option('-S', '--usesmd',  default=d_usesmd,  action='store_false',          help=h_usesmd)

    return parser

#------------------------------

if __name__ == "__main__" :
    if len(sys.argv)==1 : print('\n%s\n' % usage(2))
    else : epix10ka_offset_calibration()
    sys.exit(0)

#------------------------------
