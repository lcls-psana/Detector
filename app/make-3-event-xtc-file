#!/usr/bin/env python

"""
3-event xtc file
O'Grady, Paul Christopher<cpo@slac.stanford.edu> 2023-11-02 10:51 AM
​Dubrovin, Mikhail​
Hi Mikhail,
The script to generate 3-event xtc files is short and I have attached it below. Can you try it?
typically run it on the “s00” xtc file, but it doesn’t matter I think.
chris

E.g. for: exp=cxilx7422:run=101

git clone git@github.com:lcls-psana/data_test /tmp/data_test

python Detector/app/make-3-event-xtc-file /sdf/data/lcls/ds/cxi/cxilx7422/xtc/cxilx7422-r0101-s00-c00.xtc
make-3-event-xtc-file /sdf/data/lcls/ds/cxi/cxilx7422/xtc/cxilx7422-r0101-s00-c00.xtc #### > junk.xtc
mv junk.xtc /tmp/data_test/xtc/data-cxilx7422-r0101-3events-jungfrau4m.xtc
cd /tmp/data_test
git pull --rebase
git push origin master
"""
import sys
import numpy as np

class Dgram:
    def __init__(self,f):
        headerwords = 10
        self._header = np.fromfile(f,dtype=np.uint32,count=headerwords)
        self._xtcsize = 20
        self._payload = np.fromfile(f,dtype=np.uint8,count=self.extent()-self._xtcsize)
        #print 'payload',self.extent(),len(self._payload)
    def clocklow(self): return self._header[0]
    def clockhigh(self): return self._header[1]
    def tslow(self): return self._header[2]&0xffffff
    def transitionId(self): return (self._header[2]>>24)&0x1f
    def tshigh(self): return self._header[3]
    def fiducials(self): return self.tshigh()&0x1ffff
    def env(self): return self._header[4]
    def dmg(self): return self._header[5]
    def srclog(self): return self._header[6]
    def srcphy(self): return self._header[7]
    def contains(self): return self._header[8]
    def extent(self): return self._header[9]
    def next(self): return self.extent()+self._xtcsize
    def data(self): return self._header
    def write(self,outfile):
        self._header.tofile(outfile)
        self._payload.tofile(outfile)

infile = open(sys.argv[1],'r')
outfile = open('junk.xtc','w')
for i in range(7):
    dg = Dgram(infile)
    dg.write(outfile)
outfile.close()
infile.close()

#EOF