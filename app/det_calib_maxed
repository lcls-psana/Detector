#!/usr/bin/env python

import logging
logger = logging.getLogger(__name__)
logging.basicConfig(format='[%(levelname).1s] L%(lineno)04d: %(message)s', level=logging.INFO)

import sys
import numpy as np
from psana import DataSource, Detector
from Detector.GlobalUtils import info_ndarr, selected_record

SCRNAME = sys.argv[0].rsplit('/')[-1]
usage = '  %s <dataset-name> <detector-name> <number-of-events> <number-events-to-skip>'%SCRNAME\
      + '\nexample: %s exp=cxilv9518:run:run=8 CxiDs1.0:Jungfrau.0 10'%SCRNAME
logging.info('%s\nusage: %s' % (50*'=', usage))

nargs = len(sys.argv)
dsname  = sys.argv[1]      if nargs>1 else 'exp=cxilv9518:run=8'
detname = sys.argv[2]      if nargs>2 else 'CxiDs1.0:Jungfrau.0'
EVENTS  = int(sys.argv[3]) if nargs>3 else 3
EVSKIP  = int(sys.argv[4]) if nargs>4 else 0
fname   = 'det-calib-maxed'

nda = None

if True:
    ds = DataSource(dsname)
    det = Detector(detname)
    logging.info('det.shape:' + str(det.shape()))
    
    for i, evt in enumerate(ds.events()):

        if selected_record(i):
            logging.info('%s\nEvent %4d' % (50*'_', i))

        if i<EVSKIP: continue
        if i>EVENTS: break

        raw = det.raw(evt)
        logging.info(info_ndarr(raw, 'raw'))

        if raw is None:
            logging.warning('Event %4d raw is None' % i)
            continue

        calib = det.calib(evt)
        logging.info(info_ndarr(calib, 'calib'))

        if calib is None:
            logging.warning('Event %4d calib is None' % i)
            continue

        if nda is None: nda = np.array(calib)
        else: np.maximum(calib, nda, out=nda)

        #img = det.image(evt)
        #logging.info(info_ndarr(img, 'img'))

    np.save(fname+'.npy', nda)
    if nda.ndim>2: nda.shape = (nda.size/nda.shape[-1], nda.shape[-1])
    np.savetxt(fname+'.txt', nda, fmt='%.3f')

    logging.info('saved files %s.txt and npy'%fname)

    sys.exit('END OF %s' % SCRNAME)
